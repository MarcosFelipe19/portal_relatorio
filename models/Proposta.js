const { Model, DataTypes } = require('sequelize');

class Proposta extends Model {
    static init(sequelize) {
        super.init({
            token: DataTypes.STRING(10),
            senha: DataTypes.STRING(5),
            codigo: {
                type: DataTypes.BIGINT(20),
                primaryKey: true,
            },
            mes: {
                type: DataTypes.STRING(2),
                primaryKey: true,
            },
            ano: {
                type: DataTypes.STRING(4),
                primaryKey: true,
            },
            Rev: DataTypes.INTEGER(11),
            CodCli: DataTypes.STRING,
            CodSol: DataTypes.STRING,
            Dataofe: DataTypes.DATE,
            data_rev: DataTypes.DATE,
            Obs: DataTypes.TEXT,
            DtprevtermEnsaio: DataTypes.DATE,
            Orcamento: DataTypes.STRING(45),
            Situacao: DataTypes.STRING(45),
            NomeAceite: DataTypes.STRING(45),
            DataAceite: DataTypes.DATE,
            Desconto: DataTypes.DOUBLE,
            mkCodigo: DataTypes.STRING(45),
            rotina: DataTypes.STRING(1),
            NomeUsuario: DataTypes.STRING(45),
            devolucao: DataTypes.STRING(5),
            FatSol: DataTypes.INTEGER(10),
            DC: DataTypes.INTEGER(10),
            DN: DataTypes.INTEGER(10),
            Repasse: DataTypes.DOUBLE(15, 5),
            TotalGeral: DataTypes.DOUBLE(15, 5),
            TotalCobrado: DataTypes.DOUBLE(15, 5),
            DataLiberacao: DataTypes.DATE,
            Cancelamento: DataTypes.TEXT,
            Cliente: DataTypes.STRING,
            Solicitante: DataTypes.STRING,
            contatoCli: DataTypes.STRING,
            setorCli: DataTypes.STRING(45),
            telCli: DataTypes.STRING(45),
            emailCli: DataTypes.STRING,
            contatoSol: DataTypes.STRING,
            setorSol: DataTypes.STRING(45),
            telSol: DataTypes.STRING(45),
            emailSol: DataTypes.STRING,
            dias: DataTypes.STRING(45),
            Faturado: DataTypes.INTEGER(4),
            acreditado: DataTypes.INTEGER(1),
            Tipo: DataTypes.INTEGER(1),
            numprocesso: DataTypes.STRING,
            tipocertificacao: DataTypes.STRING,
            sistema: DataTypes.STRING,
            id_usuario: DataTypes.STRING,
            p_Preteste: DataTypes.INTEGER(1),
            p_Prova: DataTypes.INTEGER(1),
            p_Contraprova: DataTypes.INTEGER(1),
            p_Testemunha: DataTypes.INTEGER(1),
            pre_os: DataTypes.INTEGER(1),
            alterado: DataTypes.STRING(45),
            estimativa: DataTypes.INTEGER(1),
            FinalizadoPreOS: DataTypes.INTEGER(1),
            subcontratado: DataTypes.INTEGER(1),
            p_NovaProva: DataTypes.INTEGER(1),
            elaborador: DataTypes.STRING,
            negociador: DataTypes.STRING,
            novoOrcamento: DataTypes.STRING(20),
            aprovacaofin: DataTypes.INTEGER(1),
            datafinanceiro_orc: DataTypes.DATE,
            responsavelfinanceiro_orc: DataTypes.STRING(45),
            cod_hipercusto: DataTypes.STRING,
        }, {
            sequelize,
            tableName: 'ordemservicocotacao_hc_copylab',
        })
    }
}

module.exports = Proposta;